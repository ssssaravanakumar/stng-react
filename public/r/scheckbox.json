{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "scheckbox",
  "type": "registry:component",
  "title": "SCheckbox",
  "description": "A styled checkbox component",
  "files": [
    {
      "path": "registry/components/ui/scheckbox.tsx",
      "content": "import React from \"react\";\n\nexport interface SCheckboxProps {\n  checked?: boolean;\n  indeterminate?: boolean;\n  disabled?: boolean;\n  size?: \"small\" | \"medium\" | \"large\";\n  variant?: \"default\" | \"rounded\";\n  label?: string;\n  helperText?: string;\n  error?: boolean;\n  required?: boolean;\n  className?: string;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const SCheckbox: React.FC<SCheckboxProps> = ({\n  checked = false,\n  indeterminate = false,\n  disabled = false,\n  size = \"medium\",\n  variant = \"default\",\n  label,\n  helperText,\n  error = false,\n  required = false,\n  className = \"\",\n  onChange,\n}) => {\n  const checkboxRef = React.useRef<HTMLInputElement>(null);\n\n  React.useEffect(() => {\n    if (checkboxRef.current) {\n      checkboxRef.current.indeterminate = indeterminate;\n    }\n  }, [indeterminate]);\n\n  const sizeClasses = {\n    small: \"h-4 w-4\",\n    medium: \"h-5 w-5\",\n    large: \"h-6 w-6\",\n  };\n\n  const baseClasses = `\n    appearance-none border-2 transition-all duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2\n    disabled:cursor-not-allowed disabled:opacity-60 cursor-pointer\n    checked:bg-blue-600 checked:border-blue-600 hover:border-blue-400\n    focus:ring-blue-200\n  `.trim();\n\n  const variantClasses = {\n    default: \"rounded\",\n    rounded: \"rounded-full\",\n  };\n\n  const errorClasses = error\n    ? \"border-red-400 focus:ring-red-200 checked:bg-red-600 checked:border-red-600\"\n    : \"border-gray-300\";\n\n  const checkboxClass =\n    `${baseClasses} ${sizeClasses[size]} ${variantClasses[variant]} ${errorClasses} ${className}`.trim();\n\n  const labelSizeClasses = {\n    small: \"text-sm\",\n    medium: \"text-base\",\n    large: \"text-lg\",\n  };\n\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"flex items-start\">\n        <div className=\"flex items-center h-5\">\n          <input\n            ref={checkboxRef}\n            type=\"checkbox\"\n            checked={checked}\n            disabled={disabled}\n            required={required}\n            className={checkboxClass}\n            onChange={onChange}\n            style={{\n              backgroundImage: checked\n                ? `url(\"data:image/svg+xml,%3csvg viewBox='0 0 16 16' fill='white' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='m13.854 3.646-7.5 7.5a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6 10.293l7.146-7.147a.5.5 0 0 1 .708.708z'/%3e%3c/svg%3e\")`\n                : indeterminate\n                ? `url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='white' viewBox='0 0 16 16'%3e%3cpath d='M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z'/%3e%3c/svg%3e\")`\n                : \"none\",\n            }}\n          />\n        </div>\n        {label && (\n          <div className=\"ml-3\">\n            <label\n              className={`font-medium text-gray-900 ${labelSizeClasses[size]}`}\n            >\n              {label}\n              {required && <span className=\"text-red-500 ml-1\">*</span>}\n            </label>\n          </div>\n        )}\n      </div>\n      {helperText && (\n        <p\n          className={`mt-1 text-sm ${\n            error ? \"text-red-600\" : \"text-gray-500\"\n          } ${label ? \"ml-8\" : \"\"}`}\n        >\n          {helperText}\n        </p>\n      )}\n    </div>\n  );\n};\n",
      "type": "registry:component"
    }
  ]
}