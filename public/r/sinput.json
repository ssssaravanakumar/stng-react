{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "sinput",
  "type": "registry:component",
  "title": "SInput",
  "description": "A customizable input component with validation support",
  "files": [
    {
      "path": "registry/components/ui/sinput.tsx",
      "content": "import React from \"react\";\n\nexport interface SInputProps {\n  value?: string;\n  placeholder?: string;\n  type?: \"text\" | \"email\" | \"password\" | \"number\" | \"url\" | \"tel\";\n  size?: \"small\" | \"medium\" | \"large\";\n  variant?: \"default\" | \"outlined\" | \"filled\";\n  disabled?: boolean;\n  error?: boolean;\n  helperText?: string;\n  label?: string;\n  required?: boolean;\n  className?: string;\n  onChange?: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  onFocus?: (event: React.FocusEvent<HTMLInputElement>) => void;\n  onBlur?: (event: React.FocusEvent<HTMLInputElement>) => void;\n}\n\nexport const SInput: React.FC<SInputProps> = ({\n  value,\n  placeholder,\n  type = \"text\",\n  size = \"medium\",\n  variant = \"default\",\n  disabled = false,\n  error = false,\n  helperText,\n  label,\n  required = false,\n  className = \"\",\n  onChange,\n  onFocus,\n  onBlur,\n}) => {\n  const baseClasses =\n    \"w-full border rounded-md transition-colors duration-200 focus:outline-none focus:ring-2 disabled:cursor-not-allowed disabled:opacity-60\";\n\n  const sizeClasses = {\n    small: \"px-3 py-1.5 text-sm\",\n    medium: \"px-4 py-2 text-base\",\n    large: \"px-5 py-3 text-lg\",\n  };\n\n  const variantClasses = {\n    default: error\n      ? \"border-red-300 focus:border-red-500 focus:ring-red-200\"\n      : \"border-gray-300 focus:border-blue-500 focus:ring-blue-200\",\n    outlined: error\n      ? \"border-2 border-red-400 focus:border-red-500 focus:ring-red-200 bg-transparent\"\n      : \"border-2 border-gray-400 focus:border-blue-500 focus:ring-blue-200 bg-transparent\",\n    filled: error\n      ? \"border-red-300 bg-red-50 focus:border-red-500 focus:ring-red-200\"\n      : \"border-gray-300 bg-gray-50 focus:border-blue-500 focus:ring-blue-200\",\n  };\n\n  const inputClass =\n    `${baseClasses} ${sizeClasses[size]} ${variantClasses[variant]} ${className}`.trim();\n\n  return (\n    <div className=\"w-full\">\n      {label && (\n        <label className=\"block text-sm font-medium text-gray-700 mb-1\">\n          {label}\n          {required && <span className=\"text-red-500 ml-1\">*</span>}\n        </label>\n      )}\n      <input\n        type={type}\n        value={value}\n        placeholder={placeholder}\n        disabled={disabled}\n        required={required}\n        className={inputClass}\n        onChange={onChange}\n        onFocus={onFocus}\n        onBlur={onBlur}\n      />\n      {helperText && (\n        <p\n          className={`mt-1 text-sm ${error ? \"text-red-600\" : \"text-gray-500\"}`}\n        >\n          {helperText}\n        </p>\n      )}\n    </div>\n  );\n};\n",
      "type": "registry:component"
    }
  ]
}